include ../Makefile.inc

VERILOG_INCLUDE=$(PRJ_ROOT)

SYNTHESIS_TOOL=xst

XILINX_XST_FLAGS ?= -power NO -glob_opt AllClockNets -write_timing_constraints NO -cross_clock_analysis NO -slice_utilization_ratio 100 -bram_utilization_ratio 100 -dsp_utilization_ratio 100 -safe_implementation No -fsm_style lut -ram_extract Yes -ram_style Auto -rom_extract Yes -rom_style Auto -auto_bram_packing NO -mux_extract YES -mux_style Auto -decoder_extract YES -priority_extract YES -shreg_extract YES -shift_extract YES -xor_collapse YES -resource_sharing YES -async_to_sync NO -use_dsp48 auto -iobuf YES -max_fanout 100000 -bufg 32 -register_duplication YES -equivalent_register_removal YES -register_balancing No -slice_packing YES -optimize_primitives NO -use_clock_enable Auto -use_sync_set Auto -use_sync_reset Auto -iob Auto -slice_utilization_ratio_maxmargin 5

XCF_FILE=$(DESIGN_NAME).xcf
XST_FILE=$(DESIGN_NAME).xst
PRJ_FILE=$(DESIGN_NAME).prj
NGC_FILE=$(DESIGN_NAME).ngc
NETLIST_FILE=$(DESIGN_NAME).v

XST_PRJ_FILE_SRC_DECLARE=verilog work

all: $(NGC_FILE)


# Generate Xilinx project (.prj) file
$(PRJ_FILE): $(RTL_VERILOG_SRC)
	$(Q)echo; echo "\t#### Generating Xilinx PRJ file ####";
	$(Q)for file in $(RTL_VERILOG_SRC); do \
		echo $(XST_PRJ_FILE_SRC_DECLARE) $$file >> $@ ; \
	done
	$(Q)echo >> $@
	$(Q)echo
	
	
$(XST_FILE):
	$(Q)echo; echo "\t#### Generating XST file ####"; echo
	$(Q)echo "# XST Script for ORPSoC Synthesis" > $@
	$(Q)echo "# This file is autogenerated - any changes will be overwritten" >> $@
	$(Q)echo "# See the Makefile in syn/xst/bin to make changes" >> $@
	$(Q)echo "run" >> $@
	$(Q)echo "-ifn "$(PRJ_FILE) >> $@
	$(Q)echo "-ifmt mixed" >> $@
	$(Q)echo "-top "$(RTL_TOP) >> $@
	$(Q)echo "-ofmt NGC" >> $@
	$(Q)echo "-ofn "$(NGC_FILE) >> $@
	$(Q)echo "-p "$(FPGA_PART) >> $@
	$(Q)echo "-opt_level "$(OPT_LEVEL) >> $@
	$(Q)echo "-opt_mode "$(OPT_MODE) >> $@
	$(Q)echo "-uc "$(XCF_FILE) >> $@

# Give board then common verilog include paths, hoping xst does a sensible thing
# and searches them in order.
	$(Q)echo "-vlgincdir { "$(VERILOG_INCLUDE)" }" >> $@
	$(Q)echo >> $@


# Constraints file
$(XCF_FILE):
	$(Q)echo; echo "\t#### Generating Xilinx XCF file ####"; echo
	$(Q)echo "# Autogenerated XST .prj file" > $@
	$(Q)echo "#" >> $@
	$(Q)echo "# Not much here, XST is smart enough to determine clocks through DCMs" >> $@
	$(Q)echo "#" >> $@
	$(Q)echo "# 100 MHz user clock" >> $@
	$(Q)echo "# NET \"sys_clk_in\" TNM_NET = \"sys_clk_in_grp\";" >> $@
	$(Q)echo "# TIMESPEC \"TS_sys_clk_in\" = PERIOD \"sys_clk_in_grp\" 10 ns HIGH 50%;" >> $@
	$(Q)echo "# Ignore the reset logic" >> $@
	$(Q)echo "# NET rst_n_pad_i* TIG;" >> $@
	$(Q)echo "# Define the two clock domains as timespecs" >> $@
	$(Q)echo "#NET dcm0_clkdv TNM_NET=\"wb_clk\";" >> $@
	$(Q)echo "#TIMESPEC \"TS_wb_clk\" = PERIOD \"wb_clk\" 20 ns HIGH 10;" >> $@

$(NGC_FILE): $(PRJ_FILE) $(XST_FILE) $(XCF_FILE)
	$(Q)echo; echo "\t#### Running XST ####"; echo;
	$(Q)xst -ifn $(XST_FILE) $(XILINX_FLAGS) $(XST_FLAGS)
	$(Q)echo
	
	
clean:
	# $(Q)rm -rf *.* xst tmp _xmsgs xlnx_auto* *.lso
	$(Q)rm -rf *.* xlnx_auto* _xmsgs xst
	
	
	